# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

jobs:
  test:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}
          # - {os: ubuntu-latest,   r: '3.3'}
          # - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          # - {os: macOS-latest,    r: 'release'}
          # - {os: windows-latest,  r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        uses: lyricwulf/abc@v1
        with:
          linux: libv8-dev librsvg2-dev graphviz git
          macos: librsvg graphviz git
          windows: graphviz git

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: |
            rcmdcheck
            covr

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check


  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        uses: lyricwulf/abc@v1
        with:
          linux: libv8-dev librsvg2-dev graphviz git
          macos: librsvg graphviz git
          windows: graphviz git


      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: release
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: |
            rcmdcheck
            covr

      # - name: Inject slug/short variables
      #   uses: rlespinasse/github-slug-action@v3.x

      - name: check env
        run: env

      - name: check jenkins_git_info() output
        run: git log -n 1 --pretty=format:%H%n%an%n%ae%n%cn%n%ce%n%s

      - name: Test coverage
        run: covr::coveralls(repo_token="${{ secrets.COVERALLS_TOKEN }}", quiet=FALSE)
        env:
          CI_NAME: jenkins
          CI_REMOTE: ${{ env.GITHUB_REF_NAME }}
          CI_BRANCH: ${{ env.GITHUB_SERVER_URL }}/${{ env.GITHUB_REPOSITORY }}/tree/${{ env.GITHUB_REF_NAME }}
        shell: Rscript {0}
